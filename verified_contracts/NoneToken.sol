pragma solidity ^0.4.23;

/**
 * @title NoneToken - ERC-20 token with a totalSupply of 0
 * @author ligi <<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="bdd1d4dad4fdd8c9d5d8cfd8c8d093d2cfda">[emailÂ protected]</a>&gt;&#13;
 *&#13;
 * Source + Context:&#13;
 * https://github.com/walleth/contracts/NoneToken&#13;
 *&#13;
 */&#13;
&#13;
contract NoneToken {&#13;
&#13;
    /// @return The balance (always 0 in our case)&#13;
    function balanceOf(address) public pure returns (uint256) {&#13;
        return 0;&#13;
    }&#13;
&#13;
    /// @return Whether the transfer was successful or not (hint: it is not :)&#13;
    function transfer(address, uint256) public pure returns (bool) {&#13;
        return false; // there are no tokens so there can be no transfer&#13;
    }&#13;
&#13;
    /// @return Whether the transfer was successful or not (hint: it is not :)&#13;
    function transferFrom(address, address , uint256 ) public pure returns (bool) {&#13;
       return false;  // there are no tokens so there can be no transfer&#13;
    }&#13;
&#13;
    /// @return Whether the approval was successful or not (hint: it is not :)&#13;
    function approve(address, uint256) public pure returns (bool) {&#13;
        return false;&#13;
    }&#13;
&#13;
    /// @return Amount of remaining tokens allowed to spent (always 0 in our case)&#13;
    function allowance(address, address) public pure returns (uint256) {&#13;
      return 0;&#13;
    }&#13;
&#13;
    /// @return total amount of tokens (0 in our case)&#13;
    function totalSupply() public pure returns (uint256) {&#13;
      return 0;&#13;
    }&#13;
&#13;
    /// @return the name of the token&#13;
    function name() public pure returns (string) {&#13;
      return "None";&#13;
    }&#13;
&#13;
    /// @return the symbol of the token&#13;
    function symbol() public pure returns (string) {&#13;
      return "NONE";&#13;
    }&#13;
&#13;
    /// @return the amount of decimals for the token (0 in our case)&#13;
    function decimals() public pure returns (uint8) {&#13;
      return 0;&#13;
    }&#13;
&#13;
}